[tool.poetry]
authors = ["Robb Shecter <robb@public.law>"]
description = "Open-gov spiders written with Python"
name = "open-gov-crawlers"
packages = [ { include = "public_law" } ]
repository = "https://github.com/public-law/open-gov-crawlers"
version = "1.1.1"


[tool.poetry.dependencies]
beautifulsoup4 = "^4.10.0"
more-itertools = "^8.13.0"
msgpack-python = "*"
lxml = "^4.9.1"  # Security vulnerability.
pydantic = "*"
python = "^3.11"
pytz = "*"
scrapy = "^2.6.2"
scrapy-crawlera = "*"
# spidermon = {extras = ["monitoring", "validation"], version = "^1.16.2"}
textstat = { git = "https://github.com/dogweather/textstat.git", rev = "06661cff4e09a11810656537032e92acd450d8c7" }
tika = "^1.24"
titlecase = "*"
toolz = "0.*"


[tool.poetry.dev-dependencies]
pyright = "*"
pytest = "*"
pytest-watch = "*"
vcrpy = "*"
pytest-icdiff = "^0.6"


[tool.pyright]
pythonVersion = "3.11"
include = ["public_law", "tests"]
ignore = ["**/typings"]

# As strict as possible: strict mode plus the optional strict checks.
typeCheckingMode = "strict"
reportCallInDefaultInitializer = "error"
reportImplicitStringConcatenation = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"
reportUnusedImport = "warning"


[tool.pytest.ini_options]
minversion = "7.1"
pythonpath = "."
python_files = ["*_test.py",]
python_classes = ["Test", "Describe"]
python_functions = ["test_", "it_", "and_", "but_", "they_"]
addopts = "-q --no-header --doctest-modules"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
