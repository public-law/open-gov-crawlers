"""
This type stub file was generated by pyright.
"""

import lxml.etree as etree
from scrapy.linkextractors import FilteringLinkExtractor
from typing import Any, Optional

"""
Link extractor based on lxml.html
"""
XHTML_NAMESPACE = "http://www.w3.org/1999/xhtml"
_collect_string_content = etree.XPath("string()")
def _nons(tag):
    ...

class LxmlParserLinkExtractor(object):
    def __init__(self, tag=..., attr=..., process: Optional[Any] = ..., unique: bool = ..., strip: bool = ..., canonicalized: bool = ...):
        self.scan_tag = ...
        self.scan_attr = ...
        self.process_attr = ...
        self.unique = ...
        self.strip = ...
    
    def _iter_links(self, document):
        ...
    
    def _extract_links(self, selector, response_url, response_encoding, base_url):
        ...
    
    def extract_links(self, response):
        ...
    
    def _process_links(self, links):
        """ Normalize and filter extracted links

        The subclass should override it if neccessary
        """
        ...
    
    def _deduplicate_if_needed(self, links):
        ...
    


class LxmlLinkExtractor(FilteringLinkExtractor):
    def __init__(self, allow=..., deny=..., allow_domains=..., deny_domains=..., restrict_xpaths=..., tags=..., attrs=..., canonicalize: bool = ..., unique: bool = ..., process_value: Optional[Any] = ..., deny_extensions: Optional[Any] = ..., restrict_css=..., strip: bool = ..., restrict_text: Optional[Any] = ...):
        ...
    
    def extract_links(self, response):
        ...
    


