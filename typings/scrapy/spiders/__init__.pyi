"""
This type stub file was generated by pyright.
"""

import logging
from typing import Optional
from scrapy import signals
from scrapy.http import Request
from scrapy.utils.trackref import object_ref
from scrapy.utils.url import url_is_from_spider
from scrapy.spiders.crawl import CrawlSpider, Rule
from scrapy.spiders.feed import CSVFeedSpider, XMLFeedSpider
from scrapy.spiders.sitemap import SitemapSpider

"""
Base class for Scrapy spiders

See documentation in docs/topics/spiders.rst
"""
class Spider(object_ref):
    """Base class for scrapy spiders. All spiders must inherit from this
    class.
    """
    name: Optional[str] = ...
    custom_settings: Optional[dict] = ...
    def __init__(self, name=..., **kwargs) -> None:
        ...
    
    @property
    def logger(self): # -> LoggerAdapter[Logger]:
        ...
    
    def log(self, message, level=..., **kw): # -> None:
        """Log the given message at the given log level

        This helper wraps a log call to the logger within the spider, but you
        can use it directly (e.g. Spider.logger.info('msg')) or use any other
        Python logger too.
        """
        ...
    
    @classmethod
    def from_crawler(cls, crawler, *args, **kwargs): # -> Self@Spider:
        ...
    
    def start_requests(self): # -> Generator[Request, None, None]:
        ...
    
    def parse(self, response, **kwargs):
        ...
    
    @classmethod
    def update_settings(cls, settings): # -> None:
        ...
    
    @classmethod
    def handles_request(cls, request): # -> bool:
        ...
    
    @staticmethod
    def close(spider, reason): # -> Any | None:
        ...
    
    def __str__(self) -> str:
        ...
    
    __repr__ = ...


