"""
This type stub file was generated by pyright.
"""

from typing import Mapping, Optional, Type, Union
from scrapy.http import Response

"""
This module implements a class which returns the appropriate Response class
based on different criteria.
"""
class ResponseTypes:
    CLASSES = ...
    def __init__(self) -> None:
        ...
    
    def from_mimetype(self, mimetype: str) -> Type[Response]:
        """Return the most appropriate Response class for the given mimetype"""
        ...
    
    def from_content_type(self, content_type: Union[str, bytes], content_encoding: Optional[bytes] = ...) -> Type[Response]:
        """Return the most appropriate Response class from an HTTP Content-Type
        header"""
        ...
    
    def from_content_disposition(self, content_disposition: Union[str, bytes]) -> Type[Response]:
        ...
    
    def from_headers(self, headers: Mapping[bytes, bytes]) -> Type[Response]:
        """Return the most appropriate Response class by looking at the HTTP
        headers"""
        ...
    
    def from_filename(self, filename: str) -> Type[Response]:
        """Return the most appropriate Response class from a file name"""
        ...
    
    def from_body(self, body: bytes) -> Type[Response]:
        """Try to guess the appropriate response based on the body content.
        This method is a bit magic and could be improved in the future, but
        it's not meant to be used except for special cases where response types
        cannot be guess using more straightforward methods."""
        ...
    
    def from_args(self, headers: Optional[Mapping[bytes, bytes]] = ..., url: Optional[str] = ..., filename: Optional[str] = ..., body: Optional[bytes] = ...) -> Type[Response]:
        """Guess the most appropriate Response class based on
        the given arguments."""
        ...
    


responsetypes = ...
