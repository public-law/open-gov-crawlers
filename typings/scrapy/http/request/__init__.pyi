"""
This type stub file was generated by pyright.
"""

import six
from w3lib.url import safe_url_string
from scrapy.http.headers import Headers
from scrapy.utils.python import to_bytes
from scrapy.utils.trackref import object_ref
from scrapy.utils.url import escape_ajax
from scrapy.http.common import obsolete_setter
from scrapy.utils.curl import curl_to_request_kwargs
from typing import Any, Optional

"""
This module implements the Request class which is used to represent HTTP
requests in Scrapy.

See documentation in docs/topics/request-response.rst
"""
class Request(object_ref):
    def __init__(self, url, callback: Optional[Any] = ..., method=..., headers: Optional[Any] = ..., body: Optional[Any] = ..., cookies: Optional[Any] = ..., meta: Optional[Any] = ..., encoding=..., priority=..., dont_filter: bool = ..., errback: Optional[Any] = ..., flags: Optional[Any] = ..., cb_kwargs: Optional[Any] = ...):
        self.method = ...
        self.priority = ...
        self.callback = ...
        self.errback = ...
        self.cookies = ...
        self.headers = ...
        self.dont_filter = ...
        self.flags = ...
    
    @property
    def cb_kwargs(self):
        ...
    
    @property
    def meta(self):
        ...
    
    def _get_url(self):
        ...
    
    def _set_url(self, url):
        ...
    
    url = ...
    def _get_body(self):
        ...
    
    def _set_body(self, body):
        ...
    
    body = ...
    @property
    def encoding(self):
        ...
    
    def __str__(self):
        ...
    
    __repr__ = ...
    def copy(self):
        """Return a copy of this Request"""
        ...
    
    def replace(self, *args, **kwargs):
        """Create a new Request with the same attributes except for those
        given new values.
        """
        ...
    
    @classmethod
    def from_curl(cls, curl_command, ignore_unknown_options: bool = ..., **kwargs):
        """Create a Request object from a string containing a `cURL
        <https://curl.haxx.se/>`_ command. It populates the HTTP method, the
        URL, the headers, the cookies and the body. It accepts the same
        arguments as the :class:`Request` class, taking preference and
        overriding the values of the same arguments contained in the cURL
        command.

        Unrecognized options are ignored by default. To raise an error when
        finding unknown options call this method by passing
        ``ignore_unknown_options=False``.

        .. caution:: Using :meth:`from_curl` from :class:`~scrapy.http.Request`
                     subclasses, such as :class:`~scrapy.http.JSONRequest`, or
                     :class:`~scrapy.http.XmlRpcRequest`, as well as having
                     :ref:`downloader middlewares <topics-downloader-middleware>`
                     and
                     :ref:`spider middlewares <topics-spider-middleware>`
                     enabled, such as
                     :class:`~scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware`,
                     :class:`~scrapy.downloadermiddlewares.useragent.UserAgentMiddleware`,
                     or
                     :class:`~scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware`,
                     may modify the :class:`~scrapy.http.Request` object.

       """
        ...
    


