"""
This type stub file was generated by pyright.
"""

from scrapy.utils.datatypes import CaselessDict

class Headers(CaselessDict):
    """Case insensitive http headers dictionary"""
    def __init__(self, seq=..., encoding=...) -> None:
        ...
    
    def normkey(self, key): # -> bytes:
        """Normalize key to bytes"""
        ...
    
    def normvalue(self, value): # -> list[bytes]:
        """Normalize values to bytes"""
        ...
    
    def __getitem__(self, key): # -> None:
        ...
    
    def get(self, key, def_val=...): # -> None:
        ...
    
    def getlist(self, key, def_val=...): # -> list[bytes]:
        ...
    
    def setlist(self, key, list_): # -> None:
        ...
    
    def setlistdefault(self, key, default_list=...): # -> _VT@dict:
        ...
    
    def appendlist(self, key, value): # -> None:
        ...
    
    def items(self): # -> Generator[tuple[Unknown, Unknown | list[bytes]], None, None]:
        ...
    
    def values(self): # -> list[Unknown | None]:
        ...
    
    def to_string(self):
        ...
    
    def to_unicode_dict(self): # -> CaselessDict:
        """ Return headers as a CaselessDict with unicode keys
        and unicode values. Multiple values are joined with ','.
        """
        ...
    
    def __copy__(self): # -> Self@Headers:
        ...
    
    copy = ...


