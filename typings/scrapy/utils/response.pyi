"""
This type stub file was generated by pyright.
"""

import scrapy
from typing import Any, Callable, Iterable, Optional, Tuple, Union
from weakref import WeakKeyDictionary
from scrapy.http.response import Response
from twisted.web import http
from scrapy.utils.decorators import deprecated
from w3lib import html

"""
This module provides some useful functions for working with
scrapy.http.Response objects
"""
_baseurl_cache: WeakKeyDictionary[Response, str] = ...
def get_base_url(response: scrapy.http.response.text.TextResponse) -> str:
    """Return the base url of the given response, joined with the response url"""
    ...

_metaref_cache: WeakKeyDictionary[Response, Union[Tuple[None, None], Tuple[float, str]]] = ...
def get_meta_refresh(response: scrapy.http.response.text.TextResponse, ignore_tags: Optional[Iterable[str]] = ...) -> Union[Tuple[None, None], Tuple[float, str]]:
    """Parse the http-equiv refrsh parameter from the given response"""
    ...

def response_status_message(status: Union[bytes, float, int, str]) -> str:
    """Return status code plus status text descriptive message
    """
    ...

@deprecated
def response_httprepr(response: Response) -> bytes:
    """Return raw HTTP representation (as bytes) of the given response. This
    is provided only for reference, since it's not the exact stream of bytes
    that was received (that's not exposed by Twisted).
    """
    ...

def open_in_browser(response: Union[scrapy.http.response.html.HtmlResponse, scrapy.http.response.text.TextResponse], _openfunc: Callable[[str], Any] = ...) -> Any:
    """Open the given response in a local web browser, populating the <base>
    tag for external links to work
    """
    ...

