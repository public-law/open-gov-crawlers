"""
This type stub file was generated by pyright.
"""

from typing import Any as TypingAny, List, Tuple
from twisted.internet.defer import Deferred

"""Helper functions for working with signals"""
logger = ...
def send_catch_log(signal: TypingAny = ..., sender: TypingAny = ..., *arguments: TypingAny, **named: TypingAny) -> List[Tuple[TypingAny, TypingAny]]:
    """Like pydispatcher.robust.sendRobust but it also logs errors and returns
    Failures instead of exceptions.
    """
    ...

def send_catch_log_deferred(signal: TypingAny = ..., sender: TypingAny = ..., *arguments: TypingAny, **named: TypingAny) -> Deferred:
    """Like send_catch_log but supports returning deferreds on signal handlers.
    Returns a deferred that gets fired once all signal handlers deferreds were
    fired.
    """
    ...

def disconnect_all(signal: TypingAny = ..., sender: TypingAny = ...) -> None:
    """Disconnect all signal handlers. Useful for cleaning up after running
    tests
    """
    ...

